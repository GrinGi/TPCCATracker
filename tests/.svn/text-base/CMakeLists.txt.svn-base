add_definitions(-DCOMPILE_FOR_UNIT_TESTS)
add_definitions(-DENABLE_VECTORIZATION)
if(USE_SSE)
   add_definitions(-DUSE_SSE)
endif(USE_SSE)

if(ALIROOT_FOUND)
   add_definitions(-DHAVE_ALIROOT)
   include_directories(${ALIROOT_HLT_INCLUDES})
else(ALIROOT_FOUND)
   add_definitions(-DHLTCA_STANDALONE)
endif(ALIROOT_FOUND)

set(AliCode2)
foreach(c ${CommonCode})
   list(APPEND AliCode2 "../${c}")
endforeach(c)
add_library(tpcca_sse STATIC ${AliCode2})
add_library(tpcca_scalar STATIC ${AliCode2})
add_target_property(tpcca_sse COMPILE_FLAGS "-DVC_IMPL=SSE")
add_target_property(tpcca_scalar COMPILE_FLAGS "-DVC_IMPL=Scalar")
if(LARRABEE_FOUND)
   target_link_libraries(tpcca ${LRB_HOST_LIBRARY})
endif(LARRABEE_FOUND)

macro(ca_add_test name)
   add_executable(${name} ${name}.cpp)
   if(${ARGC} GREATER 1)
      target_link_libraries(${name} ${ARGN})
   endif(${ARGC} GREATER 1)
   add_test(${name} "${CMAKE_CURRENT_BINARY_DIR}/${name}")
endmacro(ca_add_test)

ca_add_test(arraytest)
ca_add_test(mathtest)
ca_add_test(kalmanfilter tpcca_sse ${VC_LIBRARIES})
add_target_property(kalmanfilter COMPILE_FLAGS "-fdump-tree-alias")

add_executable(kalmanfilter_scalar kalmanfilter.cpp)
target_link_libraries(kalmanfilter_scalar tpcca_scalar ${VC_LIBRARIES})
add_target_property(kalmanfilter_scalar COMPILE_FLAGS "-DVC_IMPL=Scalar")
add_test(kalmanfilter_scalar "${CMAKE_CURRENT_BINARY_DIR}/kalmanfilter_scalar")

#ca_add_test(gridtest tpcca)
#ca_add_test(geometrytest tpcca)
#ca_add_test(hitareatest tpcca)
